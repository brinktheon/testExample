//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutoProjectWPF.RepService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RepService.IRepositoryService")]
    public interface IRepositoryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/Save", ReplyAction="http://tempuri.org/IRepositoryService/SaveResponse")]
        void Save(CommonLibrary.Model.Car obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/Save", ReplyAction="http://tempuri.org/IRepositoryService/SaveResponse")]
        System.Threading.Tasks.Task SaveAsync(CommonLibrary.Model.Car obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/Remove", ReplyAction="http://tempuri.org/IRepositoryService/RemoveResponse")]
        void Remove(CommonLibrary.Model.Car obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/Remove", ReplyAction="http://tempuri.org/IRepositoryService/RemoveResponse")]
        System.Threading.Tasks.Task RemoveAsync(CommonLibrary.Model.Car obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/Update", ReplyAction="http://tempuri.org/IRepositoryService/UpdateResponse")]
        void Update(CommonLibrary.Model.Car obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/Update", ReplyAction="http://tempuri.org/IRepositoryService/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(CommonLibrary.Model.Car obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetByKey", ReplyAction="http://tempuri.org/IRepositoryService/GetByKeyResponse")]
        CommonLibrary.Model.Car GetByKey(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetByKey", ReplyAction="http://tempuri.org/IRepositoryService/GetByKeyResponse")]
        System.Threading.Tasks.Task<CommonLibrary.Model.Car> GetByKeyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/StartCarEdit", ReplyAction="http://tempuri.org/IRepositoryService/StartCarEditResponse")]
        CommonLibrary.Model.Car StartCarEdit(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/StartCarEdit", ReplyAction="http://tempuri.org/IRepositoryService/StartCarEditResponse")]
        System.Threading.Tasks.Task<CommonLibrary.Model.Car> StartCarEditAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/SetCarValue", ReplyAction="http://tempuri.org/IRepositoryService/SetCarValueResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommonLibrary.Model.Car))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommonLibrary.Model.CarType))]
        CommonLibrary.Model.Car SetCarValue(string name, object value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/SetCarValue", ReplyAction="http://tempuri.org/IRepositoryService/SetCarValueResponse")]
        System.Threading.Tasks.Task<CommonLibrary.Model.Car> SetCarValueAsync(string name, object value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/CancelEdit", ReplyAction="http://tempuri.org/IRepositoryService/CancelEditResponse")]
        CommonLibrary.Model.Car CancelEdit(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/CancelEdit", ReplyAction="http://tempuri.org/IRepositoryService/CancelEditResponse")]
        System.Threading.Tasks.Task<CommonLibrary.Model.Car> CancelEditAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRepositoryServiceChannel : AutoProjectWPF.RepService.IRepositoryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RepositoryServiceClient : System.ServiceModel.ClientBase<AutoProjectWPF.RepService.IRepositoryService>, AutoProjectWPF.RepService.IRepositoryService {
        
        public RepositoryServiceClient() {
        }
        
        public RepositoryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RepositoryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RepositoryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RepositoryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Save(CommonLibrary.Model.Car obj) {
            base.Channel.Save(obj);
        }
        
        public System.Threading.Tasks.Task SaveAsync(CommonLibrary.Model.Car obj) {
            return base.Channel.SaveAsync(obj);
        }
        
        public void Remove(CommonLibrary.Model.Car obj) {
            base.Channel.Remove(obj);
        }
        
        public System.Threading.Tasks.Task RemoveAsync(CommonLibrary.Model.Car obj) {
            return base.Channel.RemoveAsync(obj);
        }
        
        public void Update(CommonLibrary.Model.Car obj) {
            base.Channel.Update(obj);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(CommonLibrary.Model.Car obj) {
            return base.Channel.UpdateAsync(obj);
        }
        
        public CommonLibrary.Model.Car GetByKey(int id) {
            return base.Channel.GetByKey(id);
        }
        
        public System.Threading.Tasks.Task<CommonLibrary.Model.Car> GetByKeyAsync(int id) {
            return base.Channel.GetByKeyAsync(id);
        }
        
        public CommonLibrary.Model.Car StartCarEdit(int id) {
            return base.Channel.StartCarEdit(id);
        }
        
        public System.Threading.Tasks.Task<CommonLibrary.Model.Car> StartCarEditAsync(int id) {
            return base.Channel.StartCarEditAsync(id);
        }
        
        public CommonLibrary.Model.Car SetCarValue(string name, object value) {
            return base.Channel.SetCarValue(name, value);
        }
        
        public System.Threading.Tasks.Task<CommonLibrary.Model.Car> SetCarValueAsync(string name, object value) {
            return base.Channel.SetCarValueAsync(name, value);
        }
        
        public CommonLibrary.Model.Car CancelEdit(int id) {
            return base.Channel.CancelEdit(id);
        }
        
        public System.Threading.Tasks.Task<CommonLibrary.Model.Car> CancelEditAsync(int id) {
            return base.Channel.CancelEditAsync(id);
        }
    }
}
